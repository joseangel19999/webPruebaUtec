{"version":3,"sources":["./src/app/pages/registrar/registrar.component.ts","./src/app/pages/registrar/registrar.component.html","./src/app/menu/navbar/navbar.component.ts","./src/app/menu/navbar/navbar.component.html","./src/app/pages/usuarios/usuarios.component.ts","./src/app/pages/usuarios/usuarios.component.html","./src/app/pages/alumno/alumno.component.ts","./src/app/pages/alumno/alumno.component.html","./src/app/routing.ts","./src/environments/environment.ts","./src/app/pages/registrar-persona/registrar-persona.component.ts","./src/app/pages/registrar-persona/registrar-persona.component.html","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/pages/acercade/acercade.component.ts","./src/app/pages/acercade/acercade.component.html","./src/app/seguridad/admin.guard.ts","./src/app/utilidades/validadores/primeraLetraMayus.ts","./src/app/pipes/paginacion.pipe.ts","./src/app/services/alumnado.service.ts","./src/app/menu/footer/footer.component.ts","./src/app/menu/footer/footer.component.html","./src/app/pages/inicio/inicio.component.ts","./src/app/pages/inicio/inicio.component.html","./src/app/interceptores/token-interceptor.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/dialog-exit/dialog-exit.component.ts","./src/app/components/dialog-exit/dialog-exit.component.html","./src/app/app.module.ts","./src/app/services/usuarioService.ts","./src/app/pages/persona/persona.component.ts","./src/app/pages/persona/persona.component.html","./src/app/barra-lateral/barra-lateral.component.ts","./src/app/barra-lateral/barra-lateral.component.html","./src/app/materialModule.ts","./src/app/services/personaServices.ts","./src/app/components/dialog-confirmar/dialog-confirmar.component.ts","./src/app/components/dialog-confirmar/dialog-confirmar.component.html","./src/app/pages/profesores/profesores.component.ts","./src/app/pages/profesores/profesores.component.html","./src/app/menu/home/home.component.ts","./src/app/menu/home/home.component.html","./src/app/services/loginService.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnChanges, OnInit, SimpleChanges } from \"@angular/core\";\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from \"@angular/forms\";\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from \"@angular/material/snack-bar\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { strict } from \"assert\";\nimport { switchMap } from \"rxjs/operators\";\nimport { IUsuario } from \"src/app/models/IUsuario\";\nimport { IUsuarioPost } from \"src/app/models/IUsuarioPost\";\nimport { PersonaService } from \"src/app/services/alumnado.service\";\nimport { UsuarioService } from \"src/app/services/usuarioService\";\nimport { primeraLetraMayuscula } from \"src/app/utilidades/validadores/primeraLetraMayus\";\n\n@Component({\n  selector: \"app-registrar\",\n  templateUrl: \"./registrar.component.html\",\n  styleUrls: [\"./registrar.component.css\"],\n})\nexport class RegistrarComponent implements OnInit {\n  //posiciones del snacknbar\n  horizontalPosition: MatSnackBarHorizontalPosition = \"start\";\n  verticalPosition: MatSnackBarVerticalPosition = \"top\";\n\n  validatos: string;\n  form: FormGroup;\n  usuario: IUsuario;\n  errorsPasswprd: string;\n  //formulario\n  public formulario: FormGroup;\n  //formulario agregar\n  formAgregar = {\n    nombreCompleto: new FormControl(\"\", {\n      validators: [\n        Validators.required,\n        Validators.minLength(5),\n        primeraLetraMayuscula(),\n      ],\n    }),\n    correo: new FormControl(\"\", Validators.required),\n    password: new FormControl(\"\", Validators.required),\n    passwordConfirm: new FormControl(\"\", Validators.required),\n    estatus: new FormControl(true, Validators.required),\n  };\n  //formulario atualizar\n  formActualizar = {\n    nombreCompleto: new FormControl(\"\", Validators.required),\n    correo: new FormControl(\"\", Validators.required),\n    password: new FormControl(\"\"),\n    passwordNuevo: new FormControl(\"\"),\n    passwordConfirmar: new FormControl(\"\"),\n    estatus: new FormControl(\"\", Validators.required),\n  };\n  constructor(\n    private route: Router,\n    private formBuilder: FormBuilder,\n    private usuarioService: UsuarioService,\n    private snackBar: MatSnackBar,\n    private router: Router,\n    private activatedRouter: ActivatedRoute\n  ) {\n    if (this.router.url.includes(\"editarUsuario\")) {\n      this.activatedRouter.params\n        .pipe(\n          switchMap(({ id }) => {\n            return this.usuarioService.getUsuarioRequest(id);\n          })\n        )\n        .subscribe((respuesta) => {\n          if (respuesta.correo != null) {\n            this.usuario = respuesta;\n            this.modificarFormulario();\n          } else {\n            this.router.navigate([\"/usuarios\"]);\n          }\n        });\n    } else {\n      this.builFormulario();\n    }\n  }\n  ngOnInit(): void {}\n  modificarFormulario() {\n    this.formulario = this.formBuilder.group(this.formActualizar);\n    this.formulario.reset({\n      nombreCompleto: this.usuario.nombreCompleto,\n      correo: this.usuario.correo,\n      estatus: this.usuario.estatus,\n      password: \"\",\n      passwordNuevo: \"\",\n      passwordConfirmar: \"\",\n    });\n    // this.form.removeControl('passwordConfirm');\n  }\n  builFormulario() {\n    this.formulario = this.formBuilder.group(this.formAgregar);\n  }\n  guardarDatos() {\n    if (this.usuario != null) {\n      this.actualizarDatos();\n      if (this.usuario.usuarioId) {\n        this.formulario.addControl(\n          \"usuarioId\",\n          new FormControl(this.usuario.usuarioId)\n        );\n        this.usuarioService\n          .actualizarUsuario(this.formulario.value)\n          .subscribe((respuesta) => {\n            if (respuesta.exito == 1) {\n              this.mostrarSnackBar(respuesta.mensaje);\n            }\n          });\n      }\n    } else {\n      if (this.formulario.invalid) {\n        this.formulario.markAllAsTouched();\n        return;\n      }\n      this.usuarioService.registrarUsuario(this.formulario.value).subscribe(\n        (res) => {\n          if (res.exito == 1) {\n            this.mostrarSnackBar(\"Registro Exitoso\");\n          }\n        },\n        (err) => {\n          console.log(err);\n        }\n      );\n    }\n  }\n  actualizarDatos() {\n    let campoPasswordActual = this.formulario.get(\"password\");\n    let campoPasswordNuevo = this.formulario.get(\"passwordNuevo\");\n    let campoPasswordConfirm = this.formulario.get(\"passwordConfirmar\");\n    let passwordActual: string = campoPasswordActual.value;\n    let passwordNuevo: string = campoPasswordNuevo.value;\n    let passwordConfirmar: string = campoPasswordConfirm.value;\n    if (passwordActual != null && passwordActual != \"\") {\n      if (passwordActual.trim().length > 0) {\n        campoPasswordNuevo.setErrors(this.formulario.get(\"passwordNuevo\"));\n        campoPasswordConfirm.setErrors(\n          this.formulario.get(\"passwordConfirmar\")\n        );\n      }\n    } else {\n      campoPasswordActual.updateValueAndValidity();\n      campoPasswordNuevo.updateValueAndValidity();\n      campoPasswordConfirm.updateValueAndValidity();\n    }\n\n    if (passwordNuevo != null && passwordNuevo !== \"\") {\n      if (passwordNuevo.trim().length > 0) {\n        campoPasswordActual.setErrors(this.formulario.get(\"password\"));\n        this.errorsPasswprd = \"Password confirmar requerido\";\n        campoPasswordConfirm.setErrors(\n          this.formulario.get(\"passwordConfirmar\")\n        );\n      }\n    }\n    if (passwordConfirmar != null && passwordConfirmar != \"\") {\n      if (passwordConfirmar.trim().length > 0) {\n        campoPasswordActual.setErrors(this.formulario.get(\"password\"));\n        campoPasswordNuevo.setErrors(this.formulario.get(\"passwordNuevo\"));\n      }\n    }\n    if (this.formulario.invalid) {\n      this.formulario.markAllAsTouched();\n      return;\n    }\n  }\n\n  errorPass() {\n    return \"Campo obligatorio\";\n  }\n  obtenerErrorEmail() {\n    var campo = this.formulario.get(\"correo\");\n    if (campo.hasError(\"required\")) {\n      return \"El campo Correo es Obligatorio\";\n    }\n  }\n  obtenerErrorNombreCompleto() {\n    var campo = this.formulario.get(\"nombreCompleto\");\n    if (campo.hasError(\"required\")) {\n      return \"El campo Nombre completo es Obligatorio\";\n    }\n  }\n  obtenerPasswordActual() {\n    var campoPass2 = this.formulario.get(\"passwordActual\");\n    if (campoPass2.hasError(\"required\")) {\n      return \"El campo Password es Obligatorio\";\n    }\n  }\n  obtenerErrorPassword() {\n    var campoPass1 = this.formulario.get(\"password\");\n    var campoPass2 = this.formulario.get(\"passwordConfirm\");\n    if (campoPass1.hasError(\"required\") || campoPass2.hasError(\"required\")) {\n      return \"El campo Password es Obligatorio\";\n    }\n  }\n  obnetenerErrorName() {\n    var campo = this.formulario.get(\"nombreCompleto\");\n    if (campo.hasError(\"required\")) {\n      return \"El campo Nombre es Obligatorio\";\n    }\n    if (campo.hasError(\"minlength\")) {\n      return \"5 caracteres minimo\";\n    }\n    if (campo.hasError(\"primeraLetraMascula\")) {\n      return campo.getError(\"primeraLetraMascula\").mensaje;\n    }\n    return \"\";\n  }\n  mostrarSnackBar(mensaje: string): void {\n    this.snackBar.open(mensaje, \"Ok\", {\n      duration: 2500,\n      verticalPosition: this.verticalPosition,\n    });\n  }\n}\n","<div *ngIf=\"formulario==null; then modifi else regis\"></div>\n<ng-template #modifi>\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</ng-template>\n<ng-template #regis>\n    <div style=\"margin: 5px;\">\n        <div *ngIf=\"usuario!=null; then modificar else registrar\"></div>\n        <ng-template #modificar>\n            <h2>Modificar Usuario</h2>\n        </ng-template>\n        <ng-template #registrar>\n            <h2>Registrar Usuario</h2>\n        </ng-template>\n        <mat-card>\n            <mat-card-title>Ingrese sus datos {{ validatos }}</mat-card-title>\n            <mat-sidenav-container>\n                <!-- se hace una referencia al formulario usando [formGroup] tambien se le asigna un \n                evento en el (ngSubmit)=\"guardarDatos()\"\n                -->\n                <form [formGroup]=\"formulario\" (ngSubmit)=\"guardarDatos()\">\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Ingresa Correo</mat-label>\n                        <input type=\"email\" matInput formControlName=\"correo\">\n                        <mat-error *ngIf=\"formulario.invalid\">{{ obtenerErrorEmail() }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Nombre completo</mat-label>\n                        <input type=\"text\" matInput formControlName=\"nombreCompleto\">\n                        <mat-error *ngIf=\"formulario.invalid\">{{ obtenerErrorNombreCompleto() }}</mat-error>\n                    </mat-form-field>\n                    <div *ngIf=\"usuario; then contenedorModificar else contenedorRegistrar\"></div>\n                    <ng-template #contenedorModificar>\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Password actual</mat-label>\n                            <input type=\"password\" matInput formControlName=\"password\">\n                            <mat-error *ngIf=\"formulario.invalid\">Password Actual requerido</mat-error>\n                        </mat-form-field>\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>nuevo Password</mat-label>\n                            <input type=\"password\" matInput formControlName=\"passwordNuevo\" placeholder=\"confirmar Password\">\n                            <mat-error *ngIf=\"formulario.invalid\">Password nuevo requerido</mat-error>\n                        </mat-form-field>\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Confirmar Password</mat-label>\n                            <input type=\"password\" matInput formControlName=\"passwordConfirmar\" placeholder=\"confirmar Password\">\n                            <mat-error *ngIf=\"formulario.invalid\">{{ errorsPasswprd }}</mat-error>\n                        </mat-form-field>\n                    </ng-template>\n                    <ng-template #contenedorRegistrar>\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Ingresa Password</mat-label>\n                            <input type=\"password\" matInput formControlName=\"password\">\n                            <mat-error *ngIf=\"formulario.invalid\">{{ obtenerErrorPassword() }}</mat-error>\n                        </mat-form-field>\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Confirmar Password</mat-label>\n                            <input type=\"password\" matInput formControlName=\"passwordConfirm\" placeholder=\"confirmar Password\">\n                            <mat-error *ngIf=\"formulario.invalid\">{{ obtenerErrorPassword() }}</mat-error>\n                        </mat-form-field>\n                    </ng-template>\n                    <div>\n                        <button type=\"submit\" mat-raised-button color=\"primary\">{{ usuario==null?'Registrar':'Guardar' }}</button>\n                        <!--  <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"form.invalid\">Registrar</button> -->\n                        <button type=\"button\" routerLink=\"/usuarios\" mat-raised-button color=\"warn\">Cerrar</button>\n                    </div>\n                </form>\n            </mat-sidenav-container>\n        </mat-card>\n    </div>\n</ng-template>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { IUsuarioToken } from 'src/app/models/IUserToken';\nimport { LoginServices } from 'src/app/services/loginService';\nimport { UsuarioService } from 'src/app/services/usuarioService';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  showFiller = false;\n  get getUsuario(){\n    return this.loginService.getUsuario;\n  }\n  constructor(\n    private loginService:UsuarioService\n    ,private router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n  logout(){\n     this.loginService.logoutUsuario();\n    this.router.navigate(['/login']);\n  }\n}\n","<!-- <mat-toolbar class=\"fijado\" color=\"primary\"> -->\n<!-- <a mat-fab color=\"primary\">\n        <mat-icon>menu</mat-icon>\n    </a> -->\n<!--  <button mat-mini-fab color=\"primary\" aria-label=\"Example icon button with a menu icon\">\n        <mat-icon>menu</mat-icon>\n    </button> -->\n<!--     <button mat-icon-button aria-label=\"Example icon button with a vertical three dot icon\">\n        <mat-icon>more_vert</mat-icon>\n      </button>\n</mat-toolbar> -->\n<!-- <mat-drawer-container class=\"example-container\" autosize>\n    <mat-toolbar color=\"primary\">\n        <button (click)=\"drawer.toggle()\" mat-icon-button>\n            <mat-icon>more_vert</mat-icon>\n          </button> CODE UTHH\n        <span class=\"example-spacer\"></span>\n        <button mat-icon-button class=\"example-icon favorite-icon\" routerLink=\"/home\">\n          <mat-icon>home</mat-icon>\n        </button>\n        <button mat-icon-button class=\"example-icon favorite-icon\" routerLink=\"/acercade\">\n          <mat-icon>help_outline</mat-icon>\n        </button>\n        <a mat-button color=\"success\" routerLink=\"/personas\">\n          Registrate\n        </a>\n        <button mat-icon-button class=\"example-icon\" routerLink=\"/login\">\n          <mat-icon>vpn_key</mat-icon>\n        </button>\n        <button *ngIf=\"correoUser\" mat-icon-button class=\"example-icon\" (click)=\"logout()\">\n          <mat-icon>logout</mat-icon>\n        </button>\n    </mat-toolbar>\n    <mat-drawer #drawer class=\"example-sidenav\" mode=\"side\">\n        <p>ADMINISTRACION CODE-UTHH</p>\n        <mat-nav-list>\n            <a mat-list-item routerLink=\"/alumnos\">Alumno</a>\n            <a mat-list-item routerLink=\"/profesores\">Profesores</a>\n            <a mat-list-item routerLink=\"/home\">Home</a>\n            <a mat-list-item routerLink=\"/login\">Login</a>\n            <a mat-list-item routerLink=\"/acercade\">Acerca de</a>\n            <a mat-list-item href=\"#\">Salir</a>\n        </mat-nav-list>\n    </mat-drawer>\n    <router-outlet></router-outlet>\n\n</mat-drawer-container> -->\n\n<mat-sidenav-container class=\"example-container\">\n    <mat-sidenav #sidenav mode=\"push\">\n        <mat-toolbar color=\"primary\">\n            <span>menu</span>\n            <small class=\"spacer\"></small>\n            <button mat-icon-button (click)=\"sidenav.toggle()\">\n            <mat-icon>menu</mat-icon>\n        </button>\n        </mat-toolbar>\n        <mat-nav-list>\n            <a mat-list-item routerLink=\"/usuarios\">Usuarios</a>\n            <a mat-list-item routerLink=\"/personas\">Personas</a>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-toolbar color=\"primary\">\n        <button *ngIf=\"getUsuario!=null\" mat-icon-button (click)=\"sidenav.toggle()\">\n        <mat-icon>menu</mat-icon>\n      </button>\n\n        <span class=\"example-spacer\"></span>\n        <small *ngIf=\"getUsuario!=null\">Usuario: {{ getUsuario.email }}</small>\n        <div *ngIf=\"getUsuario==null\">\n            <button mat-icon-button class=\"example-icon favorite-icon\" routerLink=\"/home\">\n            <mat-icon>home</mat-icon>\n          </button>\n            <button mat-icon-button class=\"example-icon favorite-icon\" routerLink=\"/acercade\">\n            <mat-icon>help_outline</mat-icon>\n          </button >\n        </div>\n    <!--   <a *ngIf=\"getUsuario!=null\" mat-button color=\"success\" routerLink=\"/usuarios\">\n        Usuarios\n      </a>\n      <a *ngIf=\"getUsuario!=null\" mat-button color=\"success\" routerLink=\"/personas\">\n        Personas\n      </a> -->\n        <button *ngIf=\"getUsuario==null\" mat-icon-button class=\"example-icon\" routerLink=\"/login\">\n        <mat-icon>vpn_key</mat-icon>\n      </button>\n\n            <button *ngIf=\"getUsuario!=null\" mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\n        <mat-icon>more_vert</mat-icon>\n      </button  >\n            <mat-menu #menu=\"matMenu\">\n              <button mat-menu-item >\n                <mat-icon>account_circle</mat-icon>\n          <span>Perfil</span>\n        </button>\n            <button mat-menu-item (click)=\"logout()\">\n          <mat-icon>logout</mat-icon>\n          <span>Salir</span>\n        </button>\n            </mat-menu>\n    </mat-toolbar>\n    <div class=\"container\">\n        <router-outlet></router-outlet>\n    </div>\n</mat-sidenav-container>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport {  MatTableDataSource } from '@angular/material/table';\nimport { DialogConfirmarComponent } from 'src/app/components/dialog-confirmar/dialog-confirmar.component';\nimport { IUsuario } from 'src/app/models/IUsuario';\nimport { UsuarioService } from 'src/app/services/usuarioService';\n\n\n@Component({\n  selector: 'app-usuarios',\n  templateUrl: './usuarios.component.html',\n  styleUrls: ['./usuarios.component.css']\n})\nexport class UsuariosComponent implements OnInit {\n  //cabezera de la tabla\n  displayedColumns: string[] = ['posicion', 'nombre', 'correo', 'acciones'];\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  public dataSource = new MatTableDataSource;\n  page_size:number=3;\n  page_number:number=1;\n  pageSizeOptions=[3,5,10];\n /*  listaUsuarios:IUsuario[]=[]; */\n  constructor(\n    private usuarioService:UsuarioService\n    ,private matdialog:MatDialog\n    ,private matsnackBar:MatSnackBar) { \n   \n  }\n  ngOnInit(): void {\n   this.cargarUsuario(); \n  }\n  cargarUsuario(){\n    this.usuarioService.getUsuarios().subscribe((data:IUsuario[])=>{\n      this.dataSource.data = data;\n    },error=>{\n      console.log(\"error \",error);\n    });\n  }\n\n  //se carga cada vez que seleccionamos el numero de paginacion\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n  \n  /* \n  handlePage(e:PageEvent){\n    this.page_size=e.pageSize;\n    this.page_number=e.pageIndex+1;\n  } */\n\n  mostrarSnackbar(mensaje:string){\n    this.matsnackBar.open(mensaje,'Ok',{\n      duration:3000\n    });\n  }\n  borrarDatoTabla(i:number):void{\n    this.dataSource.data.splice(i, 1);\n    this.dataSource.paginator =this.paginator;\n  }\n  eliminar(usuario:IUsuario,i:number):void{\n     const dialog=this.matdialog.open(DialogConfirmarComponent,{\n      width:'250px',\n      data:usuario.nombreCompleto\n    });\n    dialog.afterClosed().subscribe(res=>{\n      if(res){\n        this.usuarioService.eliminarUsuario(usuario.usuarioId).subscribe(respuesta=>{\n          if(respuesta.exito==1){\n            this.borrarDatoTabla(i);\n            this.mostrarSnackbar(\"Se elimino el Registro\");\n          }\n        });\n      }\n    }); \n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n   // this.dataSource.filter = filterValue.trim().toLowerCase();\n  }  \n}\n\n","<div class=\"container-personas\">\n    <h3>Lista de usuarios</h3>\n    <a mat-raised-button color=\"primary\" routerLink=\"/registrar\">Agregar</a>\n    <button mat-raised-button color=\"primary\" class=\"btn\">Recargar</button>\n    <!-- <div class=\"container-busqueda columna\">\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Nombre</mat-label>\n            <input matInput type=\"text\">\n        </mat-form-field>\n    </div> -->\n    <div>\n        <mat-card>\n            <mat-sidenav-container>\n                <mat-form-field>\n                    <mat-label>Buscar usuario</mat-label>\n                    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ium\" #input>\n                </mat-form-field>\n                <div>\n                    <!--    <table mat-table [dataSource]=\"listaUsuarios | paginacion:page_size:page_number \" class=\"mat-elevation-z8\" matSort> -->\n                    <table mat-table [dataSource]=\"dataSource\">\n\n                        <!-- Row shown when there is no matching data. -->\n                        <!-- fila pruncipal -->\n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n                        <!-- columna de posiciones -->\n                        <ng-container matColumnDef=\"posicion\">\n                            <th mat-header-cell *matHeaderCellDef> No. </th>\n                            <td mat-cell *matCellDef=\"let element; let i = index;\"> {{i+1}} </td>\n                        </ng-container>\n\n                        <!-- columna de nombre -->\n                        <ng-container matColumnDef=\"nombre\">\n                            <th mat-header-cell *matHeaderCellDef> nombre </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.nombreCompleto}} </td>\n                        </ng-container>\n\n                        <!-- columna de correo -->\n                        <ng-container matColumnDef=\"correo\">\n                            <th mat-header-cell *matHeaderCellDef> correo </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.correo}} </td>\n                        </ng-container>\n\n                        <!-- columna de acciones -->\n                        <ng-container matColumnDef=\"acciones\">\n                            <th mat-header-cell *matHeaderCellDef> acciones </th>\n                            <td mat-cell *matCellDef=\"let element; let i=index\">\n                                <button mat-raised-button [routerLink]=\"['/editarUsuario',element.usuarioId]\" color=\"primary\">Editar</button> /\n                                <button mat-raised-button color=\"warn\" (click)=\"eliminar(element,i)\">Eliminar</button>\n                            </td>\n                        </ng-container>\n                    </table>\n                    <!--  <mat-paginator [length]=listaUsuarios.length [pageSize]=\"page_size\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"handlePage($event)\"> -->\n                    <mat-paginator [pageSizeOptions]=\"pageSizeOptions\">\n                    </mat-paginator>\n                </div>\n            </mat-sidenav-container>\n        </mat-card>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-alumno',\n  templateUrl: './alumno.component.html',\n  styleUrls: ['./alumno.component.css']\n})\nexport class AlumnoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card class=\"\">\n    <mat-card-title>Inicio de session</mat-card-title>\n    <form>\n        <p>\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Nombre Alumno</mat-label>\n                <input matInput>\n                <mat-hint>Hint</mat-hint>\n            </mat-form-field>\n        </p>\n        <p>\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Apellidos </mat-label>\n                <input matInput>\n\n                <mat-hint>Hint</mat-hint>\n            </mat-form-field>\n        </p>\n        <p>\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Direccion</mat-label>\n                <input matInput>\n\n                <mat-hint>Hint</mat-hint>\n            </mat-form-field>\n        </p>\n        <div>\n            <button type=\"submit\" mat-raised-button color=\"primary\">Acceder</button>\n        </div>\n\n    </form>\n</mat-card>","import { NgModule } from '@angular/core';\r\nimport { Routes,RouterModule } from '@angular/router';\r\nimport { AcercadeComponent } from './pages/acercade/acercade.component';\r\nimport { InicioComponent } from './pages/inicio/inicio.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { PersonaComponent } from './pages/persona/persona.component';\r\nimport { RegistrarPersonaComponent } from './pages/registrar-persona/registrar-persona.component';\r\nimport { RegistrarComponent } from './pages/registrar/registrar.component';\r\nimport { UsuariosComponent } from './pages/usuarios/usuarios.component';\r\nimport { AdminGuard } from './seguridad/admin.guard';\r\n\r\nconst _ROUTES:Routes=[\r\n    {path:'home',component:InicioComponent},\r\n    {path:'personas',component:PersonaComponent,canActivate:[AdminGuard]},\r\n    {path:'editarPersona/:id',component:RegistrarPersonaComponent,canActivate:[AdminGuard]},\r\n    {path:'registrarPersona',component:RegistrarPersonaComponent,canActivate:[AdminGuard]},\r\n    {path:'usuarios',component:UsuariosComponent,canActivate:[AdminGuard]},\r\n    {path:'registrar',component:RegistrarComponent,canActivate:[AdminGuard]},\r\n    {path:'editarUsuario/:id',component:RegistrarComponent,canActivate:[AdminGuard]},\r\n    {path:'login',component:LoginComponent},\r\n    {path:'acercade',component:AcercadeComponent},\r\n    {path:'**',pathMatch:'full',redirectTo:'login'}\r\n] \r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot(_ROUTES)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ],declarations:[]\r\n})\r\nexport class AppRoutingModule{\r\n    \r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'http://joseangel19991-001-site1.etempurl.com',\n  //http://joseangel19991-001-site1.etempurl.com/api/persona\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormControlName, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { switchMap } from 'rxjs/operators';\nimport { IPersona } from 'src/app/models/IPersona';\nimport { PersonaServicio } from 'src/app/services/personaServices';\nimport { primeraLetraMayuscula } from 'src/app/utilidades/validadores/primeraLetraMayus';\n\n@Component({\n  selector: 'app-registrar-persona',\n  templateUrl: './registrar-persona.component.html',\n  styleUrls: ['./registrar-persona.component.css']\n})\nexport class RegistrarPersonaComponent implements OnInit {\n\n  formPersona:FormGroup;\n    //posiciones del snacknbar\n    horizontalPosition: MatSnackBarHorizontalPosition = 'start';\n    verticalPosition: MatSnackBarVerticalPosition = 'top';\n    persona:IPersona;\n    personaId:number;\n\n  constructor(private formBuilder:FormBuilder\n              ,private personaService:PersonaServicio\n              ,private snackBar:MatSnackBar\n              ,private router:Router\n              ,private activatedRoute:ActivatedRoute) {\n                if(this.router.url.includes('editarPersona')){\n                 /*  this.activatedRoute.params.subscribe(data=>{\n                    console.log(data);\n                  }); */\n                   this.activatedRoute.params\n                      .pipe(\n                        switchMap(({id})=>{\n                          this.personaId=id;\n                           return this.personaService.consultaPersona(id);\n                          })).subscribe(respuesta=>{  \n                            this.persona=respuesta;\n                            this.modificarFormulario();\n                         });\n                      \n            }\n  }\n\n  modificarFormulario(){\n    this.formPersona.reset({//el reset permite solo agregar valores unos cuantos campos\n      nombreCompleto: this.persona.nombreCompleto,\n      correo: this.persona.correo,\n  });\n  }\n  ngOnInit(): void {\n    this.builFormulario();\n  }\n  builFormulario(){\n     this.formPersona=this.formBuilder.group({\n      nombreCompleto:['',{\n        validators:[Validators.required,Validators.minLength(10),primeraLetraMayuscula]\n      }],\n      correo:['',Validators.required]\n    });\n  }\n  guardarPersona(){\n    if(this.formPersona.invalid){\n      this.formPersona.markAllAsTouched();\n      return;\n    }\n    if(this.persona.personaId){\n      //añadimos un nuevo control al formpersona con sus atributos y valores\n      this.formPersona.addControl('personaId', new FormControl(this.persona.personaId, Validators.required));\n      this.personaService.modificarPersona(this.formPersona.value).subscribe(respuesta=>{\n        if(respuesta.exito==1){\n          this.mostrarSnackBar(\"Registro Actualizado\");\n        }\n      }) \n    }else{\n        this.personaService.registrarPersona(this.formPersona.value)\n        .subscribe(respuesta=>{\n            if(respuesta.exito==1){\n              this.mostrarSnackBar(\"Registro Exitoso\");\n            }\n      })\n    }\n  }\n  mostrarSnackBar(mensaje:string){\n    this.snackBar.open(mensaje,'Ok',{\n      duration:2500,\n      horizontalPosition:this.horizontalPosition,\n      verticalPosition:this.verticalPosition\n    })\n  }\n  obtenerErrrorCorreo():string{\n    var correo=this.formPersona.get('correo');\n    if(correo.hasError('required')){\n      return 'El correo es obligatorio';\n    }\n  }\n  obtenerErrorNombre():string{\n    var nombre=this.formPersona.get('nombreCompleto');\n    if(nombre.hasError('required')){\n      return 'El campo es obligatorio';\n    }\n    if(nombre.hasError('minlength')){\n      return 'El nombre debe de llevar mas de 10 caracteres';\n    }\n    if(nombre.hasError('primeraLetraMascula')){\n      return 'La primeta letra debe ser mayuscula';\n    }\n  }\n}\n","<div fxLayout=\"Column\" style=\"margin-top: 50px;\" fxLayoutAlign=\"center\" fxLayoutGap=\"20px\">\n    <mat-card fxFlex=\"40\">\n        <mat-card-header>\n            <mat-card-title>Registro de persona</mat-card-title>\n            <mat-card-subtitle>Ingrese sus datos</mat-card-subtitle>\n        </mat-card-header>\n        <mat-sidenav-container>\n            <form *ngIf=\"formPersona!=undefined\" [formGroup]=\"formPersona\" (ngSubmit)=\"guardarPersona()\" fxLayout=\"Column\">\n                <mat-form-field>\n                    <mat-label>Nombre completo</mat-label>\n                    <input matInput type=\"text\" formControlName=\"nombreCompleto\">\n                    <mat-error *ngIf=\"formPersona.invalid\">{{ obtenerErrorNombre() }}</mat-error>\n                </mat-form-field>\n                <mat-form-field>\n                    <mat-label>Correo Electronico</mat-label>\n                    <input matInput type=\"email\" formControlName=\"correo\">\n                    <mat-error *ngIf=\"formPersona.invalid\">{{ obtenerErrrorCorreo() }}</mat-error>\n                </mat-form-field>\n                <div>\n                    <button mat-raised-button color=\"primary\">Registrar</button> /\n                    <button routerLink=\"/personas\" mat-raised-button color=\"warn\">Cerrar</button>\n                </div>\n            </form>\n        </mat-sidenav-container>\n    </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { mixinColor } from '@angular/material/core';\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { UsuarioService } from 'src/app/services/usuarioService';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginU:boolean;\n  verticalPosition: MatSnackBarVerticalPosition = 'top';\n  horizontalPosition: MatSnackBarHorizontalPosition = 'right';\n  formulario:FormGroup;\n  constructor(private formBuilder:FormBuilder\n              ,private usuarioService:UsuarioService\n              ,private router:Router\n              ,private snackbar:MatSnackBar) { }\n  \n\n  ngOnInit(): void {\n    this.crearFormulario();\n  }\n\n  crearFormulario(){\n    this.formulario=this.formBuilder.group({\n        correo:['',Validators.required],\n        password:['',Validators.required]\n    });\n  }\n\n  validarUsuario(){\n    if(this.formulario.invalid){\n      return;\n    }\n    this.loginU=true;\n    this.usuarioService.loginUsuario(this.formulario.value).subscribe(respuesta=>{\n      if(respuesta.exito==0){\n        this.mostrarSnackBar(respuesta.mensaje);\n        this.loginU=false;\n      }else{\n        this.navegacion();\n        this.loginU=false;\n      }\n      console.log(respuesta);\n    },error=>{\n      this.mostrarSnackBar(\"Surgio un error al logear !!!!\");\n      this.loginU=false;\n      console.log(error);\n    });\n   // this.router.navigate(['/personas']);\n  }\n  navegacion():void{\n    this.router.navigate(['/usuarios']);\n  }\n  mostrarSnackBar(mensaje:string):void{\n    this.snackbar.open(mensaje,'Ok',{\n      duration:2500,\n      verticalPosition:this.verticalPosition,\n      horizontalPosition:this.horizontalPosition,\n    })\n  }\n\n}\n","<div fxLayout=\"Column\" fxLayoutAlign=\"center\" fxLayoutGap=\"20px\">\n    <div fxFlex=\"40\">\n        <mat-card>\n            <mat-card-header>\n                <div mat-card-avatar class=\"example-header-image\"></div>\n                <mat-card-title>Login de Usuario</mat-card-title>\n                <mat-card-subtitle>Ingrese sus datos</mat-card-subtitle>\n\n                <div *ngIf=\"loginU==true;then login \"></div>\n                <ng-template #login>\n                    <mat-spinner mode=\"indeterminate\" [diameter]=\"30\"></mat-spinner>\n                </ng-template>\n            </mat-card-header>\n            <mat-card-content>\n                <form fxLayout=\"Column\" [formGroup]=\"formulario\" (ngSubmit)=\"validarUsuario()\">\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Correo</mat-label>\n                        <input matInput type=\"email\" formControlName=\"correo\">\n                    </mat-form-field>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Password</mat-label>\n                        <input matInput type=\"password\" formControlName=\"password\">\n                    </mat-form-field>\n                    <div>\n                        <button type=\"submit\" mat-raised-button color=\"primary\">Ingresar\n                        </button> /\n                        <button type=\"button\" mat-raised-button color=\"warn\">Cancelar</button>\n\n                    </div>\n\n                </form>\n            </mat-card-content>\n            <mat-card-actions>\n                <a routerLink=\"/registrar\">No tienes cuenta? Registrate</a>\n            </mat-card-actions>\n        </mat-card>\n\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-acercade',\n  templateUrl: './acercade.component.html',\n  styleUrls: ['./acercade.component.css']\n})\nexport class AcercadeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h3>Acerce de </h3>\n<p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Optio veritatis odit incidunt corrupti, error illum deleniti excepturi nulla earum, mollitia tempore, pariatur quam fugit quia est in deserunt! Temporibus, quam!</p>\n<a routerLink=\"/home\">regresar</a>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginServices } from '../services/loginService';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  constructor(private router:Router,private serviceLogin:LoginServices){\n\n  }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n     const datosUser=localStorage.getItem('dataUser')\n     if(datosUser){\n       return true;\n     }\n     else{\n       this.router.navigate(['/login']);\n     }\n    /* this.router.navigate(['/login']);\n    return false; */\n    //return true;\n  }\n  \n}\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\r\n\r\nexport function primeraLetraMayuscula():ValidatorFn{\r\n    return (control: AbstractControl)=>{\r\n        const valor=<string>control.value;\r\n        if(!valor) return ;\r\n        if(valor.length===0) return;\r\n        const primereLetra= valor[0];\r\n        if(primereLetra!==primereLetra.toUpperCase()){\r\n            return {\r\n                primeraLetraMascula:{\r\n                    mensaje:'la primera letra debe ser mayuscula'\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'paginacion'\n})\nexport class PaginacionPipe implements PipeTransform {\n\n  transform(array: any[],page_size: number | string,page_number: number):any[] {\n    if(!array.length) return []\n    if(page_size==='all'){\n      return array;\n    }\n    page_size= page_size || 5 \n    page_number= page_number || 1\n    --page_number\n    //@ts-ignore\n    return array.slice(page_number * page_size, (page_number+1)*page_size);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\n\nimport { IPersonaDTO } from '../models/personaDTO';\nimport { IResponse } from './response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PersonaService {\n  listaPersonas:IPersonaDTO[]=[];\n  listaTemp:IPersonaDTO[]=[];\n  response:IResponse;\n    //el behavierSubject es como un observable con mas funciones\n    private usuarioSubject: BehaviorSubject<IResponse>;\n    //variable de tipo Obserbable IUsuario para comunicar los cambios datos del usuario\n    private respuesta; \n    private itemsObservable;\n\n  constructor() { \n    this.respuesta=new Subject<IResponse>();\n    this.itemsObservable== this.respuesta.asObservable();\n  }\n\n  registroPersona(persona:IPersonaDTO):Observable<IResponse>{\n    this.llenarLista();\n    this.listaPersonas;\n    if(this.listaPersonas!=null){\n      this.listaPersonas.push(persona);\n      localStorage.setItem('listPersonas',JSON.stringify(this.listaPersonas)); \n    }else{\n      this.listaTemp.push(persona);\n      localStorage.setItem('listPersonas',JSON.stringify(this.listaTemp)); \n    }\n    this.response={\n      exito:1,\n      mensaje:'Registro Exitoso',\n      data:''\n    }\n    this.respuesta.next(this.response);\n    return this.respuesta;\n   /*  if(this.listaPersonas.length==0){\n\n    } */\n    /* this.listaPersonas.push(persona);\n    localStorage.setItem('listPersonas',JSON.stringify(this.listaPersonas)); */\n  }\n\n  getListaPersonas():IPersonaDTO[]{\n    this.llenarLista();\n    return this.listaPersonas;\n  }\n  eliminarPersona(index:number){\n    this.llenarLista();\n    this.listaPersonas.splice(index,1);\n    localStorage.setItem('listPersonas',JSON.stringify(this.listaPersonas));\n  }\n  llenarLista():void{\n    this.listaPersonas=JSON.parse(localStorage.getItem('listPersonas'));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer>\r\n    <div id=\"footer-zone\" layout=\"row\" layout-align=\"center center\">\r\n        <h3>@EctoTec 2020</h3>\r\n    </div>\r\n</footer>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-inicio',\n  templateUrl: './inicio.component.html',\n  styleUrls: ['./inicio.component.css']\n})\nexport class InicioComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h3>Inicio</h3>\n<p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Et, eaque explicabo. Quos perspiciatis ullam fugiat repudiandae eaque natus consequatur magnam commodi, nisi officia adipisci eius pariatur quas id, libero molestias.</p>","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { IUsuarioToken } from '../models/IUserToken';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n  usuario:IUsuarioToken;\n  constructor(\n    private router: Router\n  ) {\n   \n   }\n\n   intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    this.usuario=JSON.parse(localStorage.getItem('dataUser'));\n    let reqClone=req;\n    if(this.usuario!=null){\n      reqClone = req.clone({\n          setHeaders: {\n          Authorization: `Bearer ${ this.usuario.token }`\n        }\n      });\n    }\n    return next.handle(reqClone).pipe(\n      retry(2),\n      catchError(this.manejarError)\n    )\n  }\n  manejarError(error:HttpErrorResponse){\n    if (error.status === 401) {\n          this.router.navigateByUrl('/login');\n    }\n    return throwError( error );\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app1';\n}\n","<!-- <app-barra-lateral></app-barra-lateral> -->\r\n<div>\r\n    <app-navbar></app-navbar>\r\n    <app-footer></app-footer>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-dialog-exit',\n  templateUrl: './dialog-exit.component.html',\n  styleUrls: ['./dialog-exit.component.css']\n})\nexport class DialogExitComponent implements OnInit {\n\n  constructor(\n    private matdialogRef:MatDialogRef<DialogExitComponent>\n     ) { }\n\n  ngOnInit(): void {\n  }\n\n  salir(){\n    this.matdialogRef.close(true);\n  }\n  cerrar(){\n    this.matdialogRef.close(false);\n  }\n\n}\n","<h2>¿Desea Salir del sistema?</h2>\n<hr>\n<div>\n    <button mat-raised-button color=\"primary\" (click)=\"salir()\">Salir</button>\n    <small class=\"spacer\"></small>\n    <button mat-raised-button color=\"light\" (click)=\"cerrar()\">Cancelar</button>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HomeComponent } from './menu/home/home.component';\nimport { AppRoutingModule } from './routing';\nimport { MaterialModule } from './materialModule';\nimport { BarraLateralComponent } from './barra-lateral/barra-lateral.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { AlumnoComponent } from './pages/alumno/alumno.component';\nimport { ProfesoresComponent } from './pages/profesores/profesores.component';\nimport { NavbarComponent } from './menu/navbar/navbar.component';\nimport { AcercadeComponent } from './pages/acercade/acercade.component';\nimport { InicioComponent } from './pages/inicio/inicio.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { FooterComponent } from './menu/footer/footer.component';\nimport { PersonaComponent } from './pages/persona/persona.component';\nimport { RegistrarComponent } from './pages/registrar/registrar.component';\n//peticiones http\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { PaginacionPipe } from './pipes/paginacion.pipe';\nimport { UsuariosComponent } from './pages/usuarios/usuarios.component';\nimport { DialogExitComponent } from './components/dialog-exit/dialog-exit.component';\nimport { DialogConfirmarComponent } from './components/dialog-confirmar/dialog-confirmar.component';\nimport { TokenInterceptorService } from './interceptores/token-interceptor.service';\nimport { RegistrarPersonaComponent } from './pages/registrar-persona/registrar-persona.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    BarraLateralComponent,\n    AlumnoComponent,\n    ProfesoresComponent,\n    NavbarComponent,\n    AcercadeComponent,\n    InicioComponent,\n    LoginComponent,\n    FooterComponent,\n    PersonaComponent,\n    RegistrarComponent,\n    PaginacionPipe,\n    UsuariosComponent,\n    DialogExitComponent,\n    DialogConfirmarComponent,\n    RegistrarPersonaComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    MaterialModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    HttpClientModule,\n\n  ],\n  providers: [\n     {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi:true\n    } \n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { IUsuario } from \"../models/IUsuario\";\r\nimport { IUsuarioPost } from \"../models/IUsuarioPost\";\r\nimport { ILoginDTO } from \"../models/loginDTO\";\r\nimport { IRespuestaHttp } from \"../models/IRespuestaHtpp\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\nimport { IUsuarioToken } from \"../models/IUserToken\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class UsuarioService {\r\n\r\n  baseUrl: string = environment.baseUrl;\r\n\r\n  get getUsuario(): IUsuarioToken {\r\n    return JSON.parse(localStorage.getItem(\"dataUser\"));\r\n  }\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getUsuarios(): Observable<IUsuario[]> {\r\n    return this.http.get<IUsuario[]>(`${this.baseUrl}/api/usuario`);\r\n  }\r\n  getUsuarioRequest(usuarioId: number) {\r\n    return this.http.get<IUsuario>(`${this.baseUrl}/api/usuario/${usuarioId}`);\r\n  }\r\n  \r\n  registrarUsuario(usuario: IUsuarioPost) {\r\n    return this.http.post<IRespuestaHttp>(\r\n      `${this.baseUrl}/api/usuario`,\r\n      usuario\r\n    );\r\n  }\r\n  actualizarUsuario(usuario: IUsuarioPost) {\r\n    return this.http.put<IRespuestaHttp>(\r\n      `${this.baseUrl}/api/usuario`,\r\n      usuario\r\n    );\r\n  }\r\n  eliminarUsuario(usuarioId: number) {\r\n    return this.http.delete<IRespuestaHttp>(\r\n      `${this.baseUrl}/api/usuario/${usuarioId}`\r\n    );\r\n  }\r\n  loginUsuario(usuarioLogin: ILoginDTO): Observable<IRespuestaHttp> {\r\n    return this.http\r\n      .post<IRespuestaHttp>(`${this.baseUrl}/api/usuario/login`, usuarioLogin)\r\n      .pipe(\r\n        map((resp) => {\r\n          if(resp.exito==1){\r\n            localStorage.setItem(\"dataUser\", JSON.stringify(resp.data));\r\n          }\r\n          return resp;\r\n        })\r\n      );\r\n  }\r\n  logoutUsuario() {\r\n    localStorage.removeItem(\"dataUser\");\r\n  }\r\n}\r\n","\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { switchMap } from 'rxjs/operators';\nimport { DialogConfirmarComponent } from 'src/app/components/dialog-confirmar/dialog-confirmar.component';\nimport { IPersona } from 'src/app/models/IPersona';\nimport { PersonaServicio } from 'src/app/services/personaServices';\n\n\n@Component({\n  selector: 'app-persona',\n  templateUrl: './persona.component.html',\n  styleUrls: ['./persona.component.css']\n})\nexport class PersonaComponent implements OnInit  {\n  displayedColumns: string[] = ['posicion', 'nombre', 'correo', 'acciones'];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  public dataSource = new MatTableDataSource;\n  //variables para asignar el tamaño de la paginacion de la tabla\n  page_size:number=3;\n  page_number:number=1;\n  pageSizeOptions=[3,5,10];\n  listaPersonas:IPersona[]=[];\n  persona:IPersona;\n  constructor(\n    private personaService:PersonaServicio\n    ,private matDialog:MatDialog\n    ,private matSnackbar:MatSnackBar) { \n     \n   \n  }\n  ngOnInit(): void {\n    this.personaService.getPersonas().subscribe(data=>{\n      this.dataSource.data=data;\n    },error=>{\n      console.log(\"error \",error);\n    });\n  }\n  //metodo que reacciona el evento del paginador y asigna las paginas del tamaño seleccionado\n  handlePage(e:PageEvent){\n    this.page_size=e.pageSize;\n    this.page_number=e.pageIndex+1;\n  } \n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n  borrarRegistroTabla(i:number){\n    this.dataSource.data.splice(i,1);\n    this.dataSource.paginator=this.paginator;\n  }\n  mostrarSnackbar(mensaje:string){\n    this.matSnackbar.open(mensaje,'Ok',{\n      duration:3000\n    })\n  }\n  eliminar(persona:IPersona,i:number):void{\n    const dialog= this.matDialog.open(DialogConfirmarComponent,{\n      width:'250px',\n      data:persona.nombreCompleto\n    });\n    dialog.afterClosed().subscribe(resultado=>{\n        if(resultado){\n          this.personaService.eliminarPersona(persona.personaId).subscribe(respuesta=>{\n            if(respuesta.exito==1){\n                this.borrarRegistroTabla(i);\n                this.mostrarSnackbar(\"Se elimino el registro\");\n            }\n          })\n        }\n    });\n  }\n\n  applyFilter(event: Event) {\n   // this.dataSource.filter = filterValue.trim().toLowerCase();\n  }  \n}\n","<div class=\"container-personas\">\n    <h3>Lista de personas</h3>\n    <a mat-raised-button color=\"primary\" routerLink=\"/registrarPersona\">Agregar</a>\n    <!-- <div class=\"container-busqueda columna\">\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Nombre</mat-label>\n            <input matInput type=\"text\">\n        </mat-form-field>\n    </div> -->\n    <div>\n        <mat-card>\n            <mat-sidenav-container>\n                <mat-form-field>\n                    <mat-label>Buscar persona</mat-label>\n                    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ium\" #input>\n                </mat-form-field>\n                <div class=\"mat-elevation-z8\">\n                    <!--                     <table mat-table [dataSource]=\"dataSource.data | paginacion:page_size:page_number \" class=\"mat-elevation-z8\" matSort> -->\n                    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort>\n\n                        <!-- Row shown when there is no matching data. -->\n                        <!-- fila pruncipal -->\n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n                        <!-- columna de posiciones -->\n                        <ng-container matColumnDef=\"posicion\">\n                            <th mat-header-cell *matHeaderCellDef> No. </th>\n                            <td mat-cell *matCellDef=\"let element; let i = index;\"> {{i+1}} </td>\n                        </ng-container>\n\n                        <!-- columna de nombre -->\n                        <ng-container matColumnDef=\"nombre\">\n                            <th mat-header-cell *matHeaderCellDef> nombre </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.nombreCompleto}} </td>\n                        </ng-container>\n\n                        <!-- columna de correo -->\n                        <ng-container matColumnDef=\"correo\">\n                            <th mat-header-cell *matHeaderCellDef> correo </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.correo}} </td>\n                        </ng-container>\n\n                        <!-- columna de acciones -->\n                        <ng-container matColumnDef=\"acciones\">\n                            <th mat-header-cell *matHeaderCellDef> acciones </th>\n                            <td mat-cell *matCellDef=\"let element; let i=index\">\n                                <button mat-raised-button [routerLink]=\"['/editarPersona',element.personaId]\" color=\"primary\">Editar</button> /\n                                <button mat-raised-button color=\"warn\" (click)=\"eliminar(element,i)\">Eliminar</button>\n                            </td>\n                        </ng-container>\n                    </table>\n                    <mat-paginator [length]=\"dataSource.data.length\" [pageSize]=\"page_size\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"handlePage($event)\">\n                    </mat-paginator>\n                </div>\n            </mat-sidenav-container>\n        </mat-card>\n    </div>\n</div>","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-barra-lateral',\n  templateUrl: './barra-lateral.component.html',\n  styleUrls: ['./barra-lateral.component.css']\n})\nexport class BarraLateralComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n    <mat-sidenav #drawer class=\"sidenav\" fixedInViewport [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\" [mode]=\"(isHandset$ | async) ? 'over' : 'side'\" [opened]=\"(isHandset$ | async) === false\">\n        <mat-toolbar>CODE UTHH</mat-toolbar>\n        <mat-nav-list>\n            <a mat-list-item routerLink=\"/alumnos\">Alumno</a>\n            <a mat-list-item routerLink=\"/profesores\">Profesores</a>\n            <a mat-list-item href=\"#\">Salir</a>\n        </mat-nav-list>\n    </mat-sidenav>\n\n    <mat-sidenav-content>\n        <mat-toolbar color=\"primary\">\n            <button type=\"button\" aria-label=\"Toggle sidenav\" mat-icon-button (click)=\"drawer.toggle()\" *ngIf=\"isHandset$ | async\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n            <span>Code Uny</span>\n            <span class=\"example-spacer\"></span>\n            <button mat-icon-button class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\">\n            <mat-icon>favorite</mat-icon>\n          </button>\n            <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with share icon\">\n            <mat-icon>share</mat-icon>\n          </button>\n        </mat-toolbar>\n        <!-- Add Content Here -->\n        <div style=\"margin: 5px;\">\n            <router-outlet></router-outlet>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { MatCardModule } from '@angular/material/card';\r\n//exportamos para manipular y diseñar el formulario\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport {  MatInputModule } from '@angular/material/input';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatGridListModule }from '@angular/material/grid-list';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n//importaciones de flexbox\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\n@NgModule({\r\n    imports:[\r\n        MatButtonModule,\r\n        MatToolbarModule,\r\n        MatIconModule,\r\n        MatListModule,\r\n        MatSidenavModule,\r\n        LayoutModule,\r\n        MatCardModule,\r\n        MatFormFieldModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatTableModule,\r\n        MatPaginatorModule,\r\n        MatSnackBarModule,\r\n        MatDialogModule,\r\n        MatMenuModule,\r\n        MatProgressBarModule,\r\n        MatProgressSpinnerModule,\r\n    ],\r\n    exports:[\r\n        MatButtonModule,\r\n        MatToolbarModule,\r\n        MatIconModule,\r\n        MatListModule,\r\n        MatSidenavModule,\r\n        LayoutModule,\r\n        MatCardModule,\r\n        MatFormFieldModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatTableModule,\r\n        MatPaginatorModule,\r\n        FlexLayoutModule,\r\n        MatGridListModule,\r\n        MatSnackBarModule,\r\n        MatDialogModule,\r\n        MatMenuModule,\r\n        MatProgressBarModule,\r\n        MatProgressSpinnerModule,\r\n    ],\r\n    providers:[]\r\n})\r\n\r\nexport class MaterialModule{\r\n\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { IPersona } from '../models/IPersona';\r\nimport { IRespuestaHttp } from '../models/IRespuestaHtpp';\r\n\r\n@Injectable({\r\n    providedIn:'root'\r\n})\r\nexport class PersonaServicio{\r\n\r\n    baseUrl:string = environment.baseUrl;\r\n    \r\n    constructor(private htpp:HttpClient){\r\n    }\r\n\r\n    getPersonas(){\r\n       return this.htpp.get<IPersona[]>(`${this.baseUrl}/api/persona`);\r\n    }\r\n    registrarPersona(persona:IPersona){\r\n       return  this.htpp.post<IRespuestaHttp>(`${this.baseUrl }/api/persona`,persona);\r\n    }\r\n    eliminarPersona(personaId:number){\r\n       return this.htpp.delete<IRespuestaHttp>(`${this.baseUrl}/api/persona/${personaId}`);\r\n    }\r\n    consultaPersona(personaId){\r\n       return this.htpp.get<IPersona>(`${this.baseUrl}/api/persona/${personaId}`);\r\n    }\r\n    modificarPersona(persona:IPersona){\r\n       return this.htpp.put<IRespuestaHttp>(`${this.baseUrl}/api/persona`,persona);\r\n    }\r\n}","import { Component, Inject, OnInit } from '@angular/core';\nimport { inject } from '@angular/core/testing';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogExitComponent } from '../dialog-exit/dialog-exit.component';\n\n@Component({\n  selector: 'app-dialog-confirmar',\n  templateUrl: './dialog-confirmar.component.html',\n  styleUrls: ['./dialog-confirmar.component.css']\n})\nexport class DialogConfirmarComponent implements OnInit {\n\n  constructor(\n    private matdialogRef:MatDialogRef<DialogExitComponent>\n    ,@Inject(MAT_DIALOG_DATA) public correo:string\n    ) { }\n\n  ngOnInit(): void {\n  }\n\n  eliminar(){\n    this.matdialogRef.close(true);\n  }\n  cerrar(){\n    this.matdialogRef.close(false);\n  }\n}\n","<h2>¿Desea Eliminar el usaurio ?</h2>\n<hr>\n<p>\n    Estas por eliminar a <strong style=\"color: blueviolet;\">{{ correo }}</strong>\n    <br> ¿Desea continuar?\n</p>\n<div>\n    <button mat-raised-button color=\"primary\" (click)=\"eliminar()\">Eliminar</button>\n    <small class=\"spacer\"></small>\n    <button mat-raised-button color=\"light\" (click)=\"cerrar()\">Cancelar</button>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profesores',\n  templateUrl: './profesores.component.html',\n  styleUrls: ['./profesores.component.css']\n})\nexport class ProfesoresComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>profesores works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>","import { Injectable,OnInit } from '@angular/core';\r\nimport { ILoginDTO } from '../models/loginDTO';\r\nimport { IPersonaDTO } from '../models/personaDTO';\r\nimport { PersonaService } from './alumnado.service';\r\n\r\n@Injectable({\r\n    providedIn:'root'\r\n})\r\n\r\nexport class LoginServices implements OnInit{\r\n\r\n    listaPersonas:IPersonaDTO[]=[];\r\n    constructor(private servicePersona: PersonaService){\r\n\r\n    }\r\n    ngOnInit(): void {\r\n       \r\n    }\r\n    loginUsuario(usuario:ILoginDTO):void{\r\n      this.llenarLista();\r\n        this.listaPersonas.map((item)=>{\r\n             if(usuario.correo===item['correo']  && usuario.password===item['pass1']){\r\n                localStorage.setItem('userLogin',usuario.correo);\r\n            }\r\n        });\r\n    }\r\n    llenarLista(){\r\n        this.listaPersonas= this.servicePersona.getListaPersonas();\r\n    }\r\n    logout(){\r\n        localStorage.removeItem('userLogin');\r\n    }\r\n\r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}